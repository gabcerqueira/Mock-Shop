{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Mock-Shop\\\\src\\\\Components\\\\sign-in\\\\SignIn.jsx\";\nimport React, { useState } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport CustomButton from \"../custom-button/CustomButton\";\nimport { SignInContainer, SignInTitle, SignInButtons } from \"./SignIn.styles\";\nimport { auth, signInWithGoogle } from \"../../firebase/firebase\";\nimport { googleSignInStart } from \"../../redux/user/userSagas\";\n\nconst SignIn = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await auth.signInWithEmailAndPassword(email, password).then(result => {\n      setEmail(\"\");\n      setPassword(\"\");\n      console.log(\"result : \", result);\n    }).catch(error => {\n      console.error(error.message);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SignInContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(SignInTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }, \"I already have an accoount\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    required: true,\n    label: \"Email\",\n    handleChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    label: \"Password\",\n    handleChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(SignInButtons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    isGoogleSignIn: true,\n    onClick: signInWithGoogle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => {\n  googleSignInStart: dispatch(googleSignInStart());\n};\n\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Mock-Shop/src/Components/sign-in/SignIn.jsx"],"names":["React","useState","FormInput","CustomButton","SignInContainer","SignInTitle","SignInButtons","auth","signInWithGoogle","googleSignInStart","SignIn","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","signInWithEmailAndPassword","then","result","console","log","catch","error","message","target","value","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,aAAvC,QAA4D,iBAA5D;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,yBAAvC;AACA,SAASC,iBAAT,QAAkC,4BAAlC;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMc,YAAY,GAAG,MAAOC,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMV,IAAI,CACRW,0BADI,CACuBP,KADvB,EAC8BE,QAD9B,EAEJM,IAFI,CAEEC,MAAD,IAAY;AACjBR,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAzB;AACA,KANI,EAOJG,KAPI,CAOGC,KAAD,IAAW;AACjBH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAK,CAACC,OAApB;AACA,KATI,CAAN;AAUA,GAbD;;AAeA,sBACC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,eAEC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAHD,eAKC;AAAM,IAAA,QAAQ,EAAEV,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AACC,IAAA,IAAI,EAAC,OADN;AAEC,IAAA,IAAI,EAAC,OAFN;AAGC,IAAA,KAAK,EAAEJ,KAHR;AAIC,IAAA,QAAQ,MAJT;AAKC,IAAA,KAAK,EAAC,OALP;AAMC,IAAA,YAAY,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACU,MAAF,CAASC,KAAV,CAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eASC,oBAAC,SAAD;AACC,IAAA,IAAI,EAAC,UADN;AAEC,IAAA,IAAI,EAAC,UAFN;AAGC,IAAA,KAAK,EAAEd,QAHR;AAIC,IAAA,QAAQ,MAJT;AAKC,IAAA,KAAK,EAAC,UALP;AAMC,IAAA,YAAY,EAAGG,CAAD,IAAOF,WAAW,CAACE,CAAC,CAACU,MAAF,CAASC,KAAV,CANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,eAiBC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,eAEC,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,cAAc,MAA1C;AAA2C,IAAA,OAAO,EAAEnB,gBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFD,CAjBD,CALD,CADD;AAgCA,CAnDD;;AAqDA,MAAMoB,kBAAkB,GAAIC,QAAD,IAAc;AACxCpB,EAAAA,iBAAiB,EAAEoB,QAAQ,CAACpB,iBAAiB,EAAlB,CAAR;AACnB,CAFD;;AAIA,eAAeC,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport FormInput from \"../form-input/FormInput\";\r\nimport CustomButton from \"../custom-button/CustomButton\";\r\nimport { SignInContainer, SignInTitle, SignInButtons } from \"./SignIn.styles\";\r\nimport { auth, signInWithGoogle } from \"../../firebase/firebase\";\r\nimport { googleSignInStart } from \"../../redux/user/userSagas\";\r\n\r\nconst SignIn = () => {\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tawait auth\r\n\t\t\t.signInWithEmailAndPassword(email, password)\r\n\t\t\t.then((result) => {\r\n\t\t\t\tsetEmail(\"\");\r\n\t\t\t\tsetPassword(\"\");\r\n\t\t\t\tconsole.log(\"result : \", result);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.error(error.message);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<SignInContainer>\r\n\t\t\t<h1>Sign In</h1>\r\n\t\t\t<SignInTitle>I already have an accoount</SignInTitle>\r\n\t\t\t<span>Sign in with your email and password</span>\r\n\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\thandleChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\thandleChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<SignInButtons>\r\n\t\t\t\t\t<CustomButton type=\"submit\">Sign in</CustomButton>\r\n\t\t\t\t\t<CustomButton type=\"button\" isGoogleSignIn onClick={signInWithGoogle}>\r\n\t\t\t\t\t\tSign in with Google\r\n\t\t\t\t\t</CustomButton>\r\n\t\t\t\t</SignInButtons>\r\n\t\t\t</form>\r\n\t\t</SignInContainer>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\tgoogleSignInStart: dispatch(googleSignInStart());\r\n};\r\n\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}