{"ast":null,"code":"import { takeLatest, all, call, put } from \"redux-saga/effects\";\nimport ProductActionTypes from \"./productTypes\";\nimport { getSingleProductSuccess, getSingleProductFailure } from \"../../actions/productActions\";\nexport function* getSingleProductAsync({\n  payload: id\n}) {\n  try {\n    const collections = yield fetchCollectionsStart();\n    console.log(\"collections: \", collections); //yield put(getSingleProductSuccess(product))\n  } catch (error) {//yield put(getSingleProductFailure(error.message))\n  }\n}\nexport function* getSingleProductStart() {\n  yield takeLatest(ProductActionTypes.GET_SINGLE_PRODUCT_START, getSingleProductAsync);\n}\nexport function* productSagas() {\n  yield all([call(getSingleProductStart)]);\n}","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Mock-Shop/src/redux/product/productSagas.js"],"names":["takeLatest","all","call","put","ProductActionTypes","getSingleProductSuccess","getSingleProductFailure","getSingleProductAsync","payload","id","collections","fetchCollectionsStart","console","log","error","getSingleProductStart","GET_SINGLE_PRODUCT_START","productSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,kBAAP,MAA+B,gBAA/B;AACA,SACCC,uBADD,EAECC,uBAFD,QAGO,8BAHP;AAKA,OAAO,UAAUC,qBAAV,CAAgC;AAAEC,EAAAA,OAAO,EAAEC;AAAX,CAAhC,EAAiD;AACvD,MAAI;AACH,UAAMC,WAAW,GAAG,MAAMC,qBAAqB,EAA/C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,WAA7B,EAFG,CAIH;AACA,GALD,CAKE,OAAOI,KAAP,EAAc,CACf;AACA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMf,UAAU,CACfI,kBAAkB,CAACY,wBADJ,EAEfT,qBAFe,CAAhB;AAIA;AAED,OAAO,UAAUU,YAAV,GAAyB;AAC/B,QAAMhB,GAAG,CAAC,CAACC,IAAI,CAACa,qBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, all, call, put } from \"redux-saga/effects\";\r\nimport ProductActionTypes from \"./productTypes\";\r\nimport {\r\n\tgetSingleProductSuccess,\r\n\tgetSingleProductFailure,\r\n} from \"../../actions/productActions\";\r\n\r\nexport function* getSingleProductAsync({ payload: id }) {\r\n\ttry {\r\n\t\tconst collections = yield fetchCollectionsStart();\r\n\t\tconsole.log(\"collections: \", collections);\r\n\r\n\t\t//yield put(getSingleProductSuccess(product))\r\n\t} catch (error) {\r\n\t\t//yield put(getSingleProductFailure(error.message))\r\n\t}\r\n}\r\n\r\nexport function* getSingleProductStart() {\r\n\tyield takeLatest(\r\n\t\tProductActionTypes.GET_SINGLE_PRODUCT_START,\r\n\t\tgetSingleProductAsync\r\n\t);\r\n}\r\n\r\nexport function* productSagas() {\r\n\tyield all([call(getSingleProductStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}