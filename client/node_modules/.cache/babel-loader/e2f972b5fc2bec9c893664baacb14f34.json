{"ast":null,"code":"import { takeLatest, all, call, put } from \"redux-saga/effects\";\nimport ProductActionTypes from \"./productTypes\";\nimport { searchProductSuccess, searchProductFailure } from \"../../actions/productActions\";\nimport { fetchCollectionsSuccess } from \"../../actions/shopActions\";\nimport { getResultItemsFromSearch } from \"../../firebase/firebase\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase\";\nexport function* searchProductsAsync({\n  payload: {\n    searchKey\n  }\n}) {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    const mappedCollectionsItems = yield Object.keys(collectionsMap).map(key => collectionsMap[key].items);\n    let resultItems = [];\n    console.log(mappedCollectionsItems);\n    console.log(searchKey);\n    yield mappedCollectionsItems.forEach(items => items.forEach(item => {\n      if (item.name.indexOf(searchKey) >= 0) {\n        resultItems.push(item);\n      }\n    }));\n    console.log(resultItems); //yield put(searchProductSuccess(resultItems));\n  } catch (error) {//yield put(searchProductFailure(error.message));\n  }\n}\nexport function* onSearchProductsStart() {\n  yield takeLatest(ProductActionTypes.SEARCH_PRODUCTS_START, searchProductsAsync);\n}\nexport function* getSingleProductStart() {\n  yield takeLatest(ProductActionTypes.GET_SINGLE_PRODUCT_START //getSingleProductAsync\n  );\n}\nexport function* productSagas() {\n  yield all([call(onSearchProductsStart)]);\n}","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Mock-Shop/src/redux/product/productSagas.js"],"names":["takeLatest","all","call","put","ProductActionTypes","searchProductSuccess","searchProductFailure","fetchCollectionsSuccess","getResultItemsFromSearch","firestore","convertCollectionsSnapshotToMap","searchProductsAsync","payload","searchKey","collectionRef","collection","snapshot","get","collectionsMap","mappedCollectionsItems","Object","keys","map","key","items","resultItems","console","log","forEach","item","name","indexOf","push","error","onSearchProductsStart","SEARCH_PRODUCTS_START","getSingleProductStart","GET_SINGLE_PRODUCT_START","productSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,kBAAP,MAA+B,gBAA/B;AAEA,SACCC,oBADD,EAECC,oBAFD,QAGO,8BAHP;AAKA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,wBAAT,QAAyC,yBAAzC;AACA,SACCC,SADD,EAECC,+BAFD,QAGO,yBAHP;AAKA,OAAO,UAAUC,mBAAV,CAA8B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA;AAAF;AAAX,CAA9B,EAA0D;AAChE,MAAI;AACH,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMhB,IAAI,CAChCQ,+BADgC,EAEhCM,QAFgC,CAAjC;AAKA,UAAMG,sBAAsB,GAAG,MAAMC,MAAM,CAACC,IAAP,CAAYH,cAAZ,EAA4BI,GAA5B,CACnCC,GAAD,IAASL,cAAc,CAACK,GAAD,CAAd,CAAoBC,KADO,CAArC;AAGA,QAAIC,WAAW,GAAG,EAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,sBAAZ;AAEAO,IAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AACA,UAAMM,sBAAsB,CAACS,OAAvB,CAAgCJ,KAAD,IACpCA,KAAK,CAACI,OAAN,CAAeC,IAAD,IAAU;AACvB,UAAIA,IAAI,CAACC,IAAL,CAAUC,OAAV,CAAkBlB,SAAlB,KAAgC,CAApC,EAAuC;AACtCY,QAAAA,WAAW,CAACO,IAAZ,CAAiBH,IAAjB;AACA;AACD,KAJD,CADK,CAAN;AAOAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ,EAtBG,CAuBH;AACA,GAxBD,CAwBE,OAAOQ,KAAP,EAAc,CACf;AACA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMlC,UAAU,CACfI,kBAAkB,CAAC+B,qBADJ,EAEfxB,mBAFe,CAAhB;AAIA;AAED,OAAO,UAAUyB,qBAAV,GAAkC;AACxC,QAAMpC,UAAU,CACfI,kBAAkB,CAACiC,wBADJ,CAEf;AAFe,GAAhB;AAIA;AAED,OAAO,UAAUC,YAAV,GAAyB;AAC/B,QAAMrC,GAAG,CAAC,CAACC,IAAI,CAACgC,qBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, all, call, put } from \"redux-saga/effects\";\r\nimport ProductActionTypes from \"./productTypes\";\r\n\r\nimport {\r\n\tsearchProductSuccess,\r\n\tsearchProductFailure,\r\n} from \"../../actions/productActions\";\r\n\r\nimport { fetchCollectionsSuccess } from \"../../actions/shopActions\";\r\nimport { getResultItemsFromSearch } from \"../../firebase/firebase\";\r\nimport {\r\n\tfirestore,\r\n\tconvertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase\";\r\n\r\nexport function* searchProductsAsync({ payload: { searchKey } }) {\r\n\ttry {\r\n\t\tconst collectionRef = firestore.collection(\"collections\");\r\n\t\tconst snapshot = yield collectionRef.get();\r\n\t\tconst collectionsMap = yield call(\r\n\t\t\tconvertCollectionsSnapshotToMap,\r\n\t\t\tsnapshot\r\n\t\t);\r\n\r\n\t\tconst mappedCollectionsItems = yield Object.keys(collectionsMap).map(\r\n\t\t\t(key) => collectionsMap[key].items\r\n\t\t);\r\n\t\tlet resultItems = [];\r\n\t\tconsole.log(mappedCollectionsItems);\r\n\r\n\t\tconsole.log(searchKey);\r\n\t\tyield mappedCollectionsItems.forEach((items) =>\r\n\t\t\titems.forEach((item) => {\r\n\t\t\t\tif (item.name.indexOf(searchKey) >= 0) {\r\n\t\t\t\t\tresultItems.push(item);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\tconsole.log(resultItems);\r\n\t\t//yield put(searchProductSuccess(resultItems));\r\n\t} catch (error) {\r\n\t\t//yield put(searchProductFailure(error.message));\r\n\t}\r\n}\r\n\r\nexport function* onSearchProductsStart() {\r\n\tyield takeLatest(\r\n\t\tProductActionTypes.SEARCH_PRODUCTS_START,\r\n\t\tsearchProductsAsync\r\n\t);\r\n}\r\n\r\nexport function* getSingleProductStart() {\r\n\tyield takeLatest(\r\n\t\tProductActionTypes.GET_SINGLE_PRODUCT_START\r\n\t\t//getSingleProductAsync\r\n\t);\r\n}\r\n\r\nexport function* productSagas() {\r\n\tyield all([call(onSearchProductsStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}