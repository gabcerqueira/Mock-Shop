{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Mock-Shop\\\\src\\\\views\\\\SingleProductPage\\\\SingleProductPage.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport SingleProduct from \"../../Components/singleProduct/SingleProduct\";\nimport { getSingleProductStart } from \"../../actions/productActions\";\nimport { fetchCollectionsStart } from \"../../actions/shopActions\";\nimport { connect } from \"react-redux\";\nimport WithSpinner from \"../../Components/with-spinner/Spinner\";\nimport { selectIsFetching } from \"../../redux/shop/shopSelectors\";\nimport { createStructuredSelector } from \"reselect\";\nconst SingleProductPageWithSpinner = WithSpinner(SingleProduct);\n\nconst SingleProductPage = ({\n  getSingleProductStart,\n  match,\n  fetchCollectionsStart,\n  isLoading\n}) => {\n  const {\n    itemId\n  } = match.params;\n  useEffect(() => {\n    fetchCollectionsStart(); //getSingleProductStart(itemId);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }, \"Single Product Page\"), /*#__PURE__*/React.createElement(Route, {\n    path: `/product/${itemId}`,\n    render: props => /*#__PURE__*/React.createElement(SingleProductPageWithSpinner, Object.assign({\n      isLoading: isLoading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 6\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getSingleProductStart: itemId => dispatch(getSingleProductStart(itemId)),\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleProductPage);","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Mock-Shop/src/views/SingleProductPage/SingleProductPage.jsx"],"names":["React","useEffect","Route","SingleProduct","getSingleProductStart","fetchCollectionsStart","connect","WithSpinner","selectIsFetching","createStructuredSelector","SingleProductPageWithSpinner","SingleProductPage","match","isLoading","itemId","params","props","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,SAASC,qBAAT,QAAsC,8BAAtC;AACA,SAASC,qBAAT,QAAsC,2BAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,MAAMC,4BAA4B,GAAGH,WAAW,CAACJ,aAAD,CAAhD;;AAEA,MAAMQ,iBAAiB,GAAG,CAAC;AAC1BP,EAAAA,qBAD0B;AAE1BQ,EAAAA,KAF0B;AAG1BP,EAAAA,qBAH0B;AAI1BQ,EAAAA;AAJ0B,CAAD,KAKpB;AACL,QAAM;AAAEC,IAAAA;AAAF,MAAaF,KAAK,CAACG,MAAzB;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACfI,IAAAA,qBAAqB,GADN,CAGf;AACA,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACC,uDACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD,eAEC,oBAAC,KAAD;AACC,IAAA,IAAI,EAAG,YAAWS,MAAO,EAD1B;AAEC,IAAA,MAAM,EAAGE,KAAD,iBACP,oBAAC,4BAAD;AAA8B,MAAA,SAAS,EAAEH;AAAzC,OAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD;AAWA,CAzBD;;AA2BA,MAAMC,eAAe,GAAGR,wBAAwB,CAAC;AAChDI,EAAAA,SAAS,EAAEL;AADqC,CAAD,CAAhD;;AAIA,MAAMU,kBAAkB,GAAIC,QAAD,KAAe;AACzCf,EAAAA,qBAAqB,EAAGU,MAAD,IAAYK,QAAQ,CAACf,qBAAqB,CAACU,MAAD,CAAtB,CADF;AAEzCT,EAAAA,qBAAqB,EAAE,MAAMc,QAAQ,CAACd,qBAAqB,EAAtB;AAFI,CAAf,CAA3B;;AAKA,eAAeC,OAAO,CAACW,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CP,iBAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport SingleProduct from \"../../Components/singleProduct/SingleProduct\";\r\nimport { getSingleProductStart } from \"../../actions/productActions\";\r\nimport { fetchCollectionsStart } from \"../../actions/shopActions\";\r\nimport { connect } from \"react-redux\";\r\nimport WithSpinner from \"../../Components/with-spinner/Spinner\";\r\nimport { selectIsFetching } from \"../../redux/shop/shopSelectors\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nconst SingleProductPageWithSpinner = WithSpinner(SingleProduct);\r\n\r\nconst SingleProductPage = ({\r\n\tgetSingleProductStart,\r\n\tmatch,\r\n\tfetchCollectionsStart,\r\n\tisLoading,\r\n}) => {\r\n\tconst { itemId } = match.params;\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchCollectionsStart();\r\n\r\n\t\t//getSingleProductStart(itemId);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>Single Product Page</h1>\r\n\t\t\t<Route\r\n\t\t\t\tpath={`/product/${itemId}`}\r\n\t\t\t\trender={(props) => (\r\n\t\t\t\t\t<SingleProductPageWithSpinner isLoading={isLoading} {...props} />\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\tisLoading: selectIsFetching,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tgetSingleProductStart: (itemId) => dispatch(getSingleProductStart(itemId)),\r\n\tfetchCollectionsStart: () => dispatch(fetchCollectionsStart()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleProductPage);\r\n"]},"metadata":{},"sourceType":"module"}