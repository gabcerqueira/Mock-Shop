{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Mock-Shop\\\\src\\\\Components\\\\sign-up\\\\SignUp.jsx\";\nimport React, { useState } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase\";\nimport \"./signUp.scss\";\nimport CustomButton from \"../custom-button/CustomButton\";\nimport { SignUpContainer, SignUpTitle } from \"./SignUp.styles\";\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../actions/userActions\";\n\nconst SignUp = () => {\n  const [displayName, setDisplayName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"password don't match\");\n      return;\n    }\n\n    try {\n      const {\n        user\n      } = await auth.createUserWithEmailAndPassword(email, password);\n      await createUserProfileDocument(user, {\n        displayName\n      });\n      setDisplayName(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(SignUpContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(SignUpTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"displayName\",\n    type: \"text\",\n    value: displayName,\n    required: true,\n    label: \"Name\",\n    handleChange: e => setDisplayName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    required: true,\n    label: \"Email\",\n    handleChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    label: \"Password\",\n    handleChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"confirmPassword\",\n    type: \"password\",\n    value: confirmPassword,\n    required: true,\n    label: \"Confirm Password\",\n    handleChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: () => dispatch(signUpStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Mock-Shop/src/Components/sign-up/SignUp.jsx"],"names":["React","useState","FormInput","auth","createUserProfileDocument","CustomButton","SignUpContainer","SignUpTitle","connect","signUpStart","SignUp","displayName","setDisplayName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleSubmit","e","preventDefault","alert","user","createUserWithEmailAndPassword","error","console","log","message","target","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport FormInput from \"../form-input/FormInput\";\r\n\r\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase\";\r\nimport \"./signUp.scss\";\r\nimport CustomButton from \"../custom-button/CustomButton\";\r\nimport { SignUpContainer, SignUpTitle } from \"./SignUp.styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUpStart } from \"../../actions/userActions\";\r\n\r\nconst SignUp = () => {\r\n\tconst [displayName, setDisplayName] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (password !== confirmPassword) {\r\n\t\t\talert(\"password don't match\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst { user } = await auth.createUserWithEmailAndPassword(\r\n\t\t\t\temail,\r\n\t\t\t\tpassword\r\n\t\t\t);\r\n\r\n\t\t\tawait createUserProfileDocument(user, { displayName });\r\n\t\t\tsetDisplayName(\"\");\r\n\t\t\tsetEmail(\"\");\r\n\t\t\tsetPassword(\"\");\r\n\t\t\tsetConfirmPassword(\"\");\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"error creating user\", error.message);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<SignUpContainer>\r\n\t\t\t<h1>Sign Up</h1>\r\n\t\t\t<SignUpTitle>I do not have a account</SignUpTitle>\r\n\t\t\t<span>Sign up with your email and password</span>\r\n\r\n\t\t\t<form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname=\"displayName\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={displayName}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\thandleChange={(e) => setDisplayName(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\thandleChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\thandleChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname=\"confirmPassword\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Confirm Password\"\r\n\t\t\t\t\thandleChange={(e) => setConfirmPassword(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<CustomButton type=\"submit\">Sign Up</CustomButton>\r\n\t\t\t</form>\r\n\t\t</SignUpContainer>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tsignUpStart: () => dispatch(signUpStart()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}