{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./userTypes\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from \"../../actions/userActions\";\nimport { clearCart } from \"../../actions/cartActions\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* googleSignInAsync() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithEmailAsync({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* isUserSignedOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n    yield put(clearCart());\n  } catch (error) {\n    yield put(signOutFailure(error.message));\n  }\n}\nexport function* isUserSignedUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield createUserProfileDocument(user, {\n      displayName\n    });\n  } catch (error) {}\n}\nexport function* emailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmailAsync);\n}\nexport function* googleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignInAsync);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onUserSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, isUserSignedOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, isUserSignedUp);\n}\nexport function* userSagas() {\n  yield all([call(googleSignInStart), call(emailSignInStart), call(onCheckUserSession), call(onUserSignOutStart)]);\n}","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Mock-Shop/src/redux/user/userSagas.js"],"names":["put","takeLatest","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","clearCart","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","message","googleSignInAsync","user","signInWithPopup","signInWithEmailAsync","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","isUserSignedOut","signOut","isUserSignedUp","displayName","createUserWithEmailAndPassword","emailSignInStart","EMAIL_SIGN_IN_START","googleSignInStart","GOOGLE_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onUserSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { put, takeLatest, all, call } from \"redux-saga/effects\";\r\n\r\nimport UserActionTypes from \"./userTypes\";\r\n\r\nimport {\r\n\tauth,\r\n\tgoogleProvider,\r\n\tcreateUserProfileDocument,\r\n\tgetCurrentUser,\r\n} from \"../../firebase/firebase\";\r\nimport {\r\n\tsignInSuccess,\r\n\tsignInFailure,\r\n\tsignOutSuccess,\r\n\tsignOutFailure,\r\n} from \"../../actions/userActions\";\r\nimport { clearCart } from \"../../actions/cartActions\";\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n\ttry {\r\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\r\n\t\tconst userSnapshot = yield userRef.get();\r\n\t\tyield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error.message));\r\n\t}\r\n}\r\n\r\nexport function* googleSignInAsync() {\r\n\ttry {\r\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\r\n\t\tyield getSnapshotFromUserAuth(user);\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error.message));\r\n\t}\r\n}\r\nexport function* signInWithEmailAsync({ payload: { email, password } }) {\r\n\ttry {\r\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n\t\tyield getSnapshotFromUserAuth(user);\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error.message));\r\n\t}\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n\ttry {\r\n\t\tconst userAuth = yield getCurrentUser();\r\n\t\tif (!userAuth) return;\r\n\t\tyield getSnapshotFromUserAuth(userAuth);\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error.message));\r\n\t}\r\n}\r\n\r\nexport function* isUserSignedOut() {\r\n\ttry {\r\n\t\tyield auth.signOut();\r\n\t\tyield put(signOutSuccess());\r\n\t\tyield put(clearCart());\r\n\t} catch (error) {\r\n\t\tyield put(signOutFailure(error.message));\r\n\t}\r\n}\r\n\r\nexport function* isUserSignedUp({ payload: { email, password, displayName } }) {\r\n\ttry {\r\n\t\tconst { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n\t\tyield createUserProfileDocument(user, { displayName });\r\n\t} catch (error) {}\r\n}\r\n\r\nexport function* emailSignInStart() {\r\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmailAsync);\r\n}\r\n\r\nexport function* googleSignInStart() {\r\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignInAsync);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n\tyield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* onUserSignOutStart() {\r\n\tyield takeLatest(UserActionTypes.SIGN_OUT_START, isUserSignedOut);\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n\tyield takeLatest(UserActionTypes.SIGN_UP_START, isUserSignedUp);\r\n}\r\n\r\nexport function* userSagas() {\r\n\tyield all([\r\n\t\tcall(googleSignInStart),\r\n\t\tcall(emailSignInStart),\r\n\t\tcall(onCheckUserSession),\r\n\t\tcall(onUserSignOutStart),\r\n\t]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}