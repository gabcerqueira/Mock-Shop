{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Mock-Shop\\\\src\\\\views\\\\SingleProductPage\\\\SingleProductPage.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport SingleProduct from \"../../Components/singleProduct/SingleProduct\";\nimport { fetchCollectionsStart } from \"../../actions/shopActions\";\nimport { connect } from \"react-redux\";\nimport WithSpinner from \"../../Components/with-spinner/WithSpinner\";\nimport { selectIsFetching } from \"../../redux/shop/shopSelectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { SingleProductPageContainer } from \"./SingleProductPage.styles\";\nimport RecentlyViewed from \"../../Components/RecentlyViewed/RecentlyViewed\";\nconst SingleProductPageWithSpinner = WithSpinner(SingleProduct);\n\nconst SingleProductPage = ({\n  match,\n  fetchCollectionsStart,\n  isLoading\n}) => {\n  const {\n    itemId\n  } = match.params;\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return /*#__PURE__*/React.createElement(SingleProductPageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: `/product/${itemId}`,\n    render: props => /*#__PURE__*/React.createElement(SingleProductPageWithSpinner, Object.assign({\n      isLoading: isLoading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(RecentlyViewed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleProductPage);","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Mock-Shop/src/views/SingleProductPage/SingleProductPage.jsx"],"names":["React","useEffect","Route","SingleProduct","fetchCollectionsStart","connect","WithSpinner","selectIsFetching","createStructuredSelector","SingleProductPageContainer","RecentlyViewed","SingleProductPageWithSpinner","SingleProductPage","match","isLoading","itemId","params","props","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,SAASC,qBAAT,QAAsC,2BAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,4BAA3C;AACA,OAAOC,cAAP,MAA2B,gDAA3B;AAEA,MAAMC,4BAA4B,GAAGL,WAAW,CAACH,aAAD,CAAhD;;AAEA,MAAMS,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAST,EAAAA,qBAAT;AAAgCU,EAAAA;AAAhC,CAAD,KAAiD;AAC1E,QAAM;AAAEC,IAAAA;AAAF,MAAaF,KAAK,CAACG,MAAzB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACfG,IAAAA,qBAAqB;AACrB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT;AAIA,sBACC,oBAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AACC,IAAA,IAAI,EAAG,YAAWW,MAAO,EAD1B;AAEC,IAAA,MAAM,EAAGE,KAAD,iBACP,oBAAC,4BAAD;AAA8B,MAAA,SAAS,EAAEH;AAAzC,OAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAOC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,CADD;AAWA,CAlBD;;AAoBA,MAAMC,eAAe,GAAGV,wBAAwB,CAAC;AAChDM,EAAAA,SAAS,EAAEP;AADqC,CAAD,CAAhD;;AAIA,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACzChB,EAAAA,qBAAqB,EAAE,MAAMgB,QAAQ,CAAChB,qBAAqB,EAAtB;AADI,CAAf,CAA3B;;AAIA,eAAeC,OAAO,CAACa,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CP,iBAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport SingleProduct from \"../../Components/singleProduct/SingleProduct\";\r\nimport { fetchCollectionsStart } from \"../../actions/shopActions\";\r\nimport { connect } from \"react-redux\";\r\nimport WithSpinner from \"../../Components/with-spinner/WithSpinner\";\r\nimport { selectIsFetching } from \"../../redux/shop/shopSelectors\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { SingleProductPageContainer } from \"./SingleProductPage.styles\";\r\nimport RecentlyViewed from \"../../Components/RecentlyViewed/RecentlyViewed\";\r\n\r\nconst SingleProductPageWithSpinner = WithSpinner(SingleProduct);\r\n\r\nconst SingleProductPage = ({ match, fetchCollectionsStart, isLoading }) => {\r\n\tconst { itemId } = match.params;\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchCollectionsStart();\r\n\t}, [fetchCollectionsStart]);\r\n\r\n\treturn (\r\n\t\t<SingleProductPageContainer>\r\n\t\t\t<Route\r\n\t\t\t\tpath={`/product/${itemId}`}\r\n\t\t\t\trender={(props) => (\r\n\t\t\t\t\t<SingleProductPageWithSpinner isLoading={isLoading} {...props} />\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t\t<RecentlyViewed />\r\n\t\t</SingleProductPageContainer>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\tisLoading: selectIsFetching,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tfetchCollectionsStart: () => dispatch(fetchCollectionsStart()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleProductPage);\r\n"]},"metadata":{},"sourceType":"module"}