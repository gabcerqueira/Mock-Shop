{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./userTypes\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase\";\nimport { signInSuccess, signInFailure } from \"../../actions/userActions\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* googleSignInAsync() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithEmailAsync({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* emailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmailAsync);\n}\nexport function* googleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignInAsync);\n}\nexport function* userSagas() {\n  yield all([call(googleSignInStart), call(emailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Mock-Shop/src/redux/user/userSagas.js"],"names":["put","takeLatest","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInSuccess","signInFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","message","googleSignInAsync","user","signInWithPopup","signInWithEmailAsync","payload","email","password","signInWithEmailAndPassword","emailSignInStart","EMAIL_SIGN_IN_START","googleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,SACCC,IADD,EAECC,cAFD,EAGCC,yBAHD,QAIO,yBAJP;AAKA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,2BAA7C;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAClD,MAAI;AACH,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACI,yBAAD,EAA4BI,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACQ,aAAa,CAAC;AAAEO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACA,GAJD,CAIE,OAAOC,KAAP,EAAc;AACf,UAAMjB,GAAG,CAACS,aAAa,CAACQ,KAAK,CAACC,OAAP,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUC,iBAAV,GAA8B;AACpC,MAAI;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMf,IAAI,CAACgB,eAAL,CAAqBf,cAArB,CAAvB;AACA,UAAMI,uBAAuB,CAACU,IAAD,CAA7B;AACA,GAHD,CAGE,OAAOH,KAAP,EAAc;AACf,UAAMjB,GAAG,CAACS,aAAa,CAACQ,KAAK,CAACC,OAAP,CAAd,CAAT;AACA;AACD;AACD,OAAO,UAAUI,oBAAV,CAA+B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA/B,EAAiE;AACvE,MAAI;AACH,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMf,IAAI,CAACqB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMf,uBAAuB,CAACU,IAAD,CAA7B;AACA,GAHD,CAGE,OAAOH,KAAP,EAAc;AACf,UAAMjB,GAAG,CAACS,aAAa,CAACQ,KAAK,CAACC,OAAP,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUS,gBAAV,GAA6B;AACnC,QAAM1B,UAAU,CAACG,eAAe,CAACwB,mBAAjB,EAAsCN,oBAAtC,CAAhB;AACA;AAED,OAAO,UAAUO,iBAAV,GAA8B;AACpC,QAAM5B,UAAU,CAACG,eAAe,CAAC0B,oBAAjB,EAAuCX,iBAAvC,CAAhB;AACA;AAED,OAAO,UAAUY,SAAV,GAAsB;AAC5B,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAAC0B,iBAAD,CAAL,EAA0B1B,IAAI,CAACwB,gBAAD,CAA9B,CAAD,CAAT;AACA","sourcesContent":["import { put, takeLatest, all, call } from \"redux-saga/effects\";\r\n\r\nimport UserActionTypes from \"./userTypes\";\r\n\r\nimport {\r\n\tauth,\r\n\tgoogleProvider,\r\n\tcreateUserProfileDocument,\r\n} from \"../../firebase/firebase\";\r\nimport { signInSuccess, signInFailure } from \"../../actions/userActions\";\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n\ttry {\r\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\r\n\t\tconst userSnapshot = yield userRef.get();\r\n\t\tyield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error.message));\r\n\t}\r\n}\r\n\r\nexport function* googleSignInAsync() {\r\n\ttry {\r\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\r\n\t\tyield getSnapshotFromUserAuth(user);\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error.message));\r\n\t}\r\n}\r\nexport function* signInWithEmailAsync({ payload: { email, password } }) {\r\n\ttry {\r\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n\t\tyield getSnapshotFromUserAuth(user);\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error.message));\r\n\t}\r\n}\r\n\r\nexport function* emailSignInStart() {\r\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmailAsync);\r\n}\r\n\r\nexport function* googleSignInStart() {\r\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignInAsync);\r\n}\r\n\r\nexport function* userSagas() {\r\n\tyield all([call(googleSignInStart), call(emailSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}