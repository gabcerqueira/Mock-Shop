{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Mock-Shop\\\\src\\\\views\\\\shopPage\\\\ShopPage.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionOverview from \"../../Components/collection-overview/CollectionOverview\";\nimport Collection from \"../collection/Collection\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStartAsync } from \"../../actions/shopActions\";\nimport \"./shopPage.scss\";\nimport WithSpinner from \"../../Components/with-spinner/Spinner\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsFetching } from \"../../redux/shop/shopSelectors\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionWithSpinner = WithSpinner(Collection);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Mock-Shop/src/views/shopPage/ShopPage.jsx"],"names":["React","Route","CollectionOverview","Collection","connect","fetchCollectionsStartAsync","WithSpinner","createStructuredSelector","selectIsFetching","CollectionOverviewWithSpinner","CollectionWithSpinner","ShopPage","Component","componentDidMount","render","match","isCollectionFetching","props","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,kBAAP,MAA+B,yDAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,0BAAT,QAA2C,2BAA3C;AACA,OAAO,iBAAP;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,MAAMC,6BAA6B,GAAGH,WAAW,CAACJ,kBAAD,CAAjD;AACA,MAAMQ,qBAAqB,GAAGJ,WAAW,CAACH,UAAD,CAAzC;;AAEA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACtCC,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkC,KAAKC,KAA7C;AAEA,wBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAG,GAAEF,KAAK,CAACG,IAAK,EAFrB;AAGC,MAAA,MAAM,EAAGD,KAAD,iBACP,oBAAC,6BAAD;AACC,QAAA,SAAS,EAAED;AADZ,SAEKC,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAWC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAG,GAAEF,KAAK,CAACG,IAAK,gBADrB;AAEC,MAAA,MAAM,EAAGD,KAAD,iBACP,oBAAC,qBAAD;AACC,QAAA,SAAS,EAAED;AADZ,SAEKC,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXD,CADD;AAuBA;;AA7BqC;;AAgCvC,MAAME,eAAe,GAAGZ,wBAAwB,CAAC;AAChDS,EAAAA,oBAAoB,EAAER;AAD0B,CAAD,CAAhD;;AAIA,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACzChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADD,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAACe,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\nimport CollectionOverview from \"../../Components/collection-overview/CollectionOverview\";\r\nimport Collection from \"../collection/Collection\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCollectionsStartAsync } from \"../../actions/shopActions\";\r\nimport \"./shopPage.scss\";\r\nimport WithSpinner from \"../../Components/with-spinner/Spinner\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectIsFetching } from \"../../redux/shop/shopSelectors\";\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionWithSpinner = WithSpinner(Collection);\r\n\r\nclass ShopPage extends React.Component {\r\n\tcomponentDidMount() {}\r\n\r\n\trender() {\r\n\t\tconst { match, isCollectionFetching } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"shop-page\">\r\n\t\t\t\t<Route\r\n\t\t\t\t\texact\r\n\t\t\t\t\tpath={`${match.path}`}\r\n\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t<CollectionOverviewWithSpinner\r\n\t\t\t\t\t\t\tisLoading={isCollectionFetching}\r\n\t\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\r\n\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t<CollectionWithSpinner\r\n\t\t\t\t\t\t\tisLoading={isCollectionFetching}\r\n\t\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\tisCollectionFetching: selectIsFetching,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tfetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}