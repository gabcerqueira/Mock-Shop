{"ast":null,"code":"import { takeLatest, all, call, put } from \"redux-saga/effects\";\nimport ProductActionTypes from \"./productTypes\";\nimport { getSingleProductSuccess, getSingleProductFailure } from \"../../actions/productActions\";\nimport { fetchCollectionsStart } from \"../../actions/shopActions\";\nimport ShopActionTypes from \"../shop/shopTypes\";\nexport function* getSingleProductAsync({\n  payload: {\n    collectionId,\n    productId\n  }\n}) {\n  try {\n    const collections = null;\n    console.log(\"collections: \", collections); //yield put(getSingleProductSuccess(product))\n  } catch (error) {//yield put(getSingleProductFailure(error.message))\n  }\n}\nexport function* getSingleProductStart() {\n  yield takeLatest(ProductActionTypes.GET_SINGLE_PRODUCT_START, getSingleProductAsync);\n}\nexport function* productSagas() {\n  yield all([call(getSingleProductStart)]);\n}","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Mock-Shop/src/redux/product/productSagas.js"],"names":["takeLatest","all","call","put","ProductActionTypes","getSingleProductSuccess","getSingleProductFailure","fetchCollectionsStart","ShopActionTypes","getSingleProductAsync","payload","collectionId","productId","collections","console","log","error","getSingleProductStart","GET_SINGLE_PRODUCT_START","productSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,kBAAP,MAA+B,gBAA/B;AACA,SACCC,uBADD,EAECC,uBAFD,QAGO,8BAHP;AAIA,SAASC,qBAAT,QAAsC,2BAAtC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAO,UAAUC,qBAAV,CAAgC;AACtCC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB;AAD6B,CAAhC,EAEJ;AACF,MAAI;AACH,UAAMC,WAAW,GAAG,IAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,WAA7B,EAFG,CAIH;AACA,GALD,CAKE,OAAOG,KAAP,EAAc,CACf;AACA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMjB,UAAU,CACfI,kBAAkB,CAACc,wBADJ,EAEfT,qBAFe,CAAhB;AAIA;AAED,OAAO,UAAUU,YAAV,GAAyB;AAC/B,QAAMlB,GAAG,CAAC,CAACC,IAAI,CAACe,qBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, all, call, put } from \"redux-saga/effects\";\r\nimport ProductActionTypes from \"./productTypes\";\r\nimport {\r\n\tgetSingleProductSuccess,\r\n\tgetSingleProductFailure,\r\n} from \"../../actions/productActions\";\r\nimport { fetchCollectionsStart } from \"../../actions/shopActions\";\r\nimport ShopActionTypes from \"../shop/shopTypes\";\r\n\r\nexport function* getSingleProductAsync({\r\n\tpayload: { collectionId, productId },\r\n}) {\r\n\ttry {\r\n\t\tconst collections = null;\r\n\t\tconsole.log(\"collections: \", collections);\r\n\r\n\t\t//yield put(getSingleProductSuccess(product))\r\n\t} catch (error) {\r\n\t\t//yield put(getSingleProductFailure(error.message))\r\n\t}\r\n}\r\n\r\nexport function* getSingleProductStart() {\r\n\tyield takeLatest(\r\n\t\tProductActionTypes.GET_SINGLE_PRODUCT_START,\r\n\t\tgetSingleProductAsync\r\n\t);\r\n}\r\n\r\nexport function* productSagas() {\r\n\tyield all([call(getSingleProductStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}