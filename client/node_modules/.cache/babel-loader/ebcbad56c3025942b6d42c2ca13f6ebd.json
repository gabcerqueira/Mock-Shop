{"ast":null,"code":"import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shopTypes\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase\";\nimport { fetchColletionsSuccess, fetchCollectionsFailure } from \"../../actions/shopActions\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchColletionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n  /*\r\n  collectionRef\r\n  \t.get()\r\n  \t.then((snapshot) => {\r\n  \t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n  \t\tdispatch(fetchColletionsSuccess(collectionsMap));\r\n  \t})\r\n  \t.catch((error) => dispatch(fetchCollectionsFailure(error.message)));\r\n  \t*/\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Mock-Shop/src/redux/shop/shopSagas.js"],"names":["all","call","put","takeLatest","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchColletionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,yBAHP;AAKA,SACCC,sBADD,EAECC,uBAFD,QAGO,2BAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACxC,MAAI;AACH,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAChCK,+BADgC,EAEhCM,QAFgC,CAAjC;AAIA,UAAMV,GAAG,CAACK,sBAAsB,CAACO,cAAD,CAAvB,CAAT;AACA,GARD,CAQE,OAAOC,KAAP,EAAc;AACf,UAAMb,GAAG,CAACM,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACA;AAED;;;;;;;;;;AASA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMd,UAAU,CACfC,eAAe,CAACc,uBADD,EAEfT,qBAFe,CAAhB;AAIA;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC5B,QAAMnB,GAAG,CAAC,CAACC,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport ShopActionTypes from \"./shopTypes\";\r\n\r\nimport {\r\n\tfirestore,\r\n\tconvertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase\";\r\n\r\nimport {\r\n\tfetchColletionsSuccess,\r\n\tfetchCollectionsFailure,\r\n} from \"../../actions/shopActions\";\r\n\r\nexport function* fetchCollectionsAsync() {\r\n\ttry {\r\n\t\tconst collectionRef = firestore.collection(\"collections\");\r\n\t\tconst snapshot = yield collectionRef.get();\r\n\t\tconst collectionsMap = yield call(\r\n\t\t\tconvertCollectionsSnapshotToMap,\r\n\t\t\tsnapshot\r\n\t\t);\r\n\t\tyield put(fetchColletionsSuccess(collectionsMap));\r\n\t} catch (error) {\r\n\t\tyield put(fetchCollectionsFailure(error.message));\r\n\t}\r\n\r\n\t/*\r\n\tcollectionRef\r\n\t\t.get()\r\n\t\t.then((snapshot) => {\r\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t\tdispatch(fetchColletionsSuccess(collectionsMap));\r\n\t\t})\r\n\t\t.catch((error) => dispatch(fetchCollectionsFailure(error.message)));\r\n\t\t*/\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n\tyield takeLatest(\r\n\t\tShopActionTypes.FETCH_COLLECTIONS_START,\r\n\t\tfetchCollectionsAsync\r\n\t);\r\n}\r\n\r\nexport function* shopSagas() {\r\n\tyield all([call(fetchCollectionsStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}