{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Mock-Shop\\\\src\\\\views\\\\shopPage\\\\ShopPage.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionOverview from \"../../Components/collection-overview/CollectionOverview\";\nimport Collection from \"../collection/Collection\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../actions/shopActions\";\nimport \"./shopPage.scss\";\nimport WithSpinner from \"../../Components/with-spinner/Spinner\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionWithSpinner = WithSpinner(Collection);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n    /*\r\n    //Observer Pattern\r\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(\r\n    \tasync (snapshot) => {\r\n    \t\tconst CollectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    \t\tupdateCollections(CollectionsMap);\r\n    \t\tthis.setState({ loading: false });\r\n    \t}\r\n    );\r\n    */\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: CollectionsMap => dispatch(updateCollections(CollectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Mock-Shop/src/views/shopPage/ShopPage.jsx"],"names":["React","Route","CollectionOverview","Collection","connect","updateCollections","WithSpinner","firestore","convertCollectionsSnapshotToMap","CollectionOverviewWithSpinner","CollectionWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","render","match","console","log","path","mapDispatchToProps","dispatch","CollectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,kBAAP,MAA+B,yDAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,OAAO,iBAAP;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,yBAHP;AAKA,MAAMC,6BAA6B,GAAGH,WAAW,CAACJ,kBAAD,CAAjD;AACA,MAAMQ,qBAAqB,GAAGJ,WAAW,CAACH,UAAD,CAAzC;;AAEA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACPC,MAAAA,OAAO,EAAE;AADF,KAD8B;AAAA,SAItCC,uBAJsC,GAIZ,IAJY;AAAA;;AAKtCC,EAAAA,iBAAiB,GAAG;AACnB,UAAM;AAAEX,MAAAA;AAAF,QAAwB,KAAKY,KAAnC;AACA,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACtC,YAAMC,cAAc,GAAGf,+BAA+B,CAACc,QAAD,CAAtD;AACAjB,MAAAA,iBAAiB,CAACkB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,KAJD;AAMA;;;;;;;;;;AAUA;;AAEDW,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKT,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACA,wBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,EAAG,GAAES,KAAK,CAACG,IAAK,EAFrB;AAGC,MAAA,MAAM,EAAGZ,KAAD,iBACP,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEH;AAA1C,SAAuDG,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAQC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAG,GAAES,KAAK,CAACG,IAAK,gBADrB;AAEC,MAAA,MAAM,EAAGZ,KAAD,iBACP,oBAAC,qBAAD;AAAuB,QAAA,SAAS,EAAEH;AAAlC,SAA+CG,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARD,CADD;AAiBA;;AAhDqC;;AAmDvC,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACzC1B,EAAAA,iBAAiB,EAAG2B,cAAD,IAClBD,QAAQ,CAAC1B,iBAAiB,CAAC2B,cAAD,CAAlB;AAFgC,CAAf,CAA3B;;AAKA,eAAe5B,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCnB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\nimport CollectionOverview from \"../../Components/collection-overview/CollectionOverview\";\r\nimport Collection from \"../collection/Collection\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateCollections } from \"../../actions/shopActions\";\r\nimport \"./shopPage.scss\";\r\nimport WithSpinner from \"../../Components/with-spinner/Spinner\";\r\n\r\nimport {\r\n\tfirestore,\r\n\tconvertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase\";\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionWithSpinner = WithSpinner(Collection);\r\n\r\nclass ShopPage extends React.Component {\r\n\tstate = {\r\n\t\tloading: true,\r\n\t};\r\n\tunsubscribeFromSnapshot = null;\r\n\tcomponentDidMount() {\r\n\t\tconst { updateCollections } = this.props;\r\n\t\tconst collectionRef = firestore.collection(\"collections\");\r\n\r\n\t\tcollectionRef.get().then((snapshot) => {\r\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t\tupdateCollections(collectionsMap);\r\n\t\t\tthis.setState({ loading: false });\r\n\t\t});\r\n\r\n\t\t/*\r\n\t\t//Observer Pattern\r\n\t\tthis.unsubscribeFromSnapshot = collectionRef.onSnapshot(\r\n\t\t\tasync (snapshot) => {\r\n\t\t\t\tconst CollectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t\t\tupdateCollections(CollectionsMap);\r\n\t\t\t\tthis.setState({ loading: false });\r\n\t\t\t}\r\n\t\t);\r\n\t\t*/\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { match } = this.props;\r\n\t\tconst { loading } = this.state;\r\n\t\tconsole.log(this.props);\r\n\t\treturn (\r\n\t\t\t<div className=\"shop-page\">\r\n\t\t\t\t<Route\r\n\t\t\t\t\texact\r\n\t\t\t\t\tpath={`${match.path}`}\r\n\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t<CollectionOverviewWithSpinner isLoading={loading} {...props} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\r\n\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t<CollectionWithSpinner isLoading={loading} {...props} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tupdateCollections: (CollectionsMap) =>\r\n\t\tdispatch(updateCollections(CollectionsMap)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}