{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shopTypes\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"fui chamado !!\");\n  const collectionRef = firestore.collection(\"collections\");\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchColletionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Mock-Shop/src/redux/shop/shopSagas.js"],"names":["takeEvery","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","fetchColletionsSuccess","catch","error","fetchCollectionsFailure","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,yBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AACA,QAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AAEAD,EAAAA,aAAa,CACXE,GADF,GAEEC,IAFF,CAEQC,QAAD,IAAc;AACnB,UAAMC,cAAc,GAAGT,+BAA+B,CAACQ,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACC,sBAAsB,CAACF,cAAD,CAAvB,CAAR;AACA,GALF,EAMEG,KANF,CAMSC,KAAD,IAAWH,QAAQ,CAACI,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAN3B;AAOA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMnB,SAAS,CACdC,eAAe,CAACmB,uBADF,EAEdhB,qBAFc,CAAf;AAIA","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\r\n\r\nimport ShopActionTypes from \"./shopTypes\";\r\n\r\nimport {\r\n\tfirestore,\r\n\tconvertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase\";\r\n\r\nexport function* fetchCollectionsAsync() {\r\n\tyield console.log(\"fui chamado !!\");\r\n\tconst collectionRef = firestore.collection(\"collections\");\r\n\r\n\tcollectionRef\r\n\t\t.get()\r\n\t\t.then((snapshot) => {\r\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t\tdispatch(fetchColletionsSuccess(collectionsMap));\r\n\t\t})\r\n\t\t.catch((error) => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n\tyield takeEvery(\r\n\t\tShopActionTypes.FETCH_COLLECTIONS_START,\r\n\t\tfetchCollectionsAsync\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}