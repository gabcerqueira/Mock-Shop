{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Mock-Shop\\\\src\\\\Components\\\\sign-in\\\\SignIn.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/FormInput\";\nimport CustomButton from \"../custom-button/CustomButton\";\nimport { SignInContainer, SignInTitle, SignInButtons } from \"./SignIn.styles\";\nimport { auth } from \"../../firebase/firebase\";\nimport { googleSignInStart, emailSignInStart } from \"../../actions/userActions\";\n\nconst SignIn = ({\n  googleSignInStart,\n  emailSignInStart\n}) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(SignInContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(SignInTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }, \"I already have an accoount\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    required: true,\n    label: \"Email\",\n    handleChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    label: \"Password\",\n    handleChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(SignInButtons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    isGoogleSignIn: true,\n    onClick: googleSignInStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: () => dispatch(emailSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Mock-Shop/src/Components/sign-in/SignIn.jsx"],"names":["React","useState","connect","FormInput","CustomButton","SignInContainer","SignInTitle","SignInButtons","auth","googleSignInStart","emailSignInStart","SignIn","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","target","value","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,aAAvC,QAA4D,iBAA5D;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,2BAApD;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEF,EAAAA,iBAAF;AAAqBC,EAAAA;AAArB,CAAD,KAA6C;AAC3D,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMe,YAAY,GAAG,MAAOC,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACC,cAAF;AAEAL,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACA,GALD;;AAOA,sBACC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,eAEC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAHD,eAKC;AAAM,IAAA,QAAQ,EAAEC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AACC,IAAA,IAAI,EAAC,OADN;AAEC,IAAA,IAAI,EAAC,OAFN;AAGC,IAAA,KAAK,EAAEJ,KAHR;AAIC,IAAA,QAAQ,MAJT;AAKC,IAAA,KAAK,EAAC,OALP;AAMC,IAAA,YAAY,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eASC,oBAAC,SAAD;AACC,IAAA,IAAI,EAAC,UADN;AAEC,IAAA,IAAI,EAAC,UAFN;AAGC,IAAA,KAAK,EAAEN,QAHR;AAIC,IAAA,QAAQ,MAJT;AAKC,IAAA,KAAK,EAAC,UALP;AAMC,IAAA,YAAY,EAAGG,CAAD,IAAOF,WAAW,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,eAiBC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,eAEC,oBAAC,YAAD;AACC,IAAA,IAAI,EAAC,QADN;AAEC,IAAA,cAAc,MAFf;AAGC,IAAA,OAAO,EAAEX,iBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFD,CAjBD,CALD,CADD;AAoCA,CA/CD;;AAiDA,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACzCb,EAAAA,iBAAiB,EAAE,MAAMa,QAAQ,CAACb,iBAAiB,EAAlB,CADQ;AAEzCC,EAAAA,gBAAgB,EAAE,MAAMY,QAAQ,CAACZ,gBAAgB,EAAjB;AAFS,CAAf,CAA3B;;AAKA,eAAeR,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCV,MAAlC,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormInput from \"../form-input/FormInput\";\r\nimport CustomButton from \"../custom-button/CustomButton\";\r\nimport { SignInContainer, SignInTitle, SignInButtons } from \"./SignIn.styles\";\r\nimport { auth } from \"../../firebase/firebase\";\r\nimport { googleSignInStart, emailSignInStart } from \"../../actions/userActions\";\r\n\r\nconst SignIn = ({ googleSignInStart, emailSignInStart }) => {\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tsetEmail(\"\");\r\n\t\tsetPassword(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<SignInContainer>\r\n\t\t\t<h1>Sign In</h1>\r\n\t\t\t<SignInTitle>I already have an accoount</SignInTitle>\r\n\t\t\t<span>Sign in with your email and password</span>\r\n\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\thandleChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\thandleChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<SignInButtons>\r\n\t\t\t\t\t<CustomButton type=\"submit\">Sign in</CustomButton>\r\n\t\t\t\t\t<CustomButton\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tisGoogleSignIn\r\n\t\t\t\t\t\tonClick={googleSignInStart}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSign in with Google\r\n\t\t\t\t\t</CustomButton>\r\n\t\t\t\t</SignInButtons>\r\n\t\t\t</form>\r\n\t\t</SignInContainer>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\r\n\temailSignInStart: () => dispatch(emailSignInStart()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}