{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDaz0ucWUdNo7RRcOY8EkOd6OFjnHsS1kg\",\n  authDomain: \"mock-shop-db.firebaseapp.com\",\n  databaseURL: \"https://mock-shop-db.firebaseio.com\",\n  projectId: \"mock-shop-db\",\n  storageBucket: \"mock-shop-db.appspot.com\",\n  messagingSenderId: \"554682725185\",\n  appId: \"1:554682725185:web:d0acd968bea1d3626fa7c0\",\n  measurementId: \"G-GRZH2MLSQK\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`/users/${userAuth.uid}`);\n  const collectionSnapshot = await collectionRef.get();\n  console.log(collectionSnapshot);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndItems = async collection => {\n  const {\n    title\n  } = collection;\n  const collectionRef = firestore.collection(`${title}`);\n  const queryRef = await collectionRef.get();\n\n  if (!queryRef) {\n    try {\n      queryRef.docs.map(item => {\n        const {\n          id,\n          name,\n          imageUrl,\n          price\n        } = item;\n        const createdAt = new Date();\n        item.set({\n          id,\n          name,\n          imageUrl,\n          price,\n          createdAt\n        });\n      });\n    } catch (error) {\n      console.log(\"error creating collection\", error.message);\n    }\n  } else {\n    try {\n      queryRef.docs.map(item => {\n        if (!queryRef.empty) {\n          const itemRef = firestore.doc(`/${title}/${id}`);\n          const itemSnapShot = itemRef.get();\n\n          if (!itemSnapShot) {\n            const {\n              id,\n              name,\n              imageUrl,\n              price\n            } = item;\n            const createdAt = new Date();\n            item.set({\n              id,\n              name,\n              imageUrl,\n              price,\n              createdAt\n            });\n          } else {}\n        } else {\n          return;\n        }\n      });\n    } catch (error) {\n      console.log(\"error creating item\", error.message);\n    }\n  }\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Mock-Shop/src/firebase/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionSnapshot","collectionRef","get","console","log","snapshot","exists","displayName","email","createdAt","Date","set","error","message","addCollectionAndItems","collection","title","queryRef","docs","map","item","id","name","imageUrl","price","empty","itemRef","itemSnapShot","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: \"AIzaSyDaz0ucWUdNo7RRcOY8EkOd6OFjnHsS1kg\",\r\n\tauthDomain: \"mock-shop-db.firebaseapp.com\",\r\n\tdatabaseURL: \"https://mock-shop-db.firebaseio.com\",\r\n\tprojectId: \"mock-shop-db\",\r\n\tstorageBucket: \"mock-shop-db.appspot.com\",\r\n\tmessagingSenderId: \"554682725185\",\r\n\tappId: \"1:554682725185:web:d0acd968bea1d3626fa7c0\",\r\n\tmeasurementId: \"G-GRZH2MLSQK\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n\tif (!userAuth) return;\r\n\tconst userRef = firestore.doc(`/users/${userAuth.uid}`);\r\n\r\n\tconst collectionSnapshot = await collectionRef.get();\r\n\tconsole.log(collectionSnapshot);\r\n\r\n\tconst snapshot = await userRef.get();\r\n\r\n\tif (!snapshot.exists) {\r\n\t\tconst { displayName, email } = userAuth;\r\n\t\tconst createdAt = new Date();\r\n\r\n\t\ttry {\r\n\t\t\tawait userRef.set({\r\n\t\t\t\tdisplayName,\r\n\t\t\t\temail,\r\n\t\t\t\tcreatedAt,\r\n\t\t\t\t...additionalData,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"error creating user\", error.message);\r\n\t\t}\r\n\t}\r\n\r\n\treturn userRef;\r\n};\r\n\r\nexport const addCollectionAndItems = async (collection) => {\r\n\tconst { title } = collection;\r\n\tconst collectionRef = firestore.collection(`${title}`);\r\n\r\n\tconst queryRef = await collectionRef.get();\r\n\r\n\tif (!queryRef) {\r\n\t\ttry {\r\n\t\t\tqueryRef.docs.map((item) => {\r\n\t\t\t\tconst { id, name, imageUrl, price } = item;\r\n\t\t\t\tconst createdAt = new Date();\r\n\t\t\t\titem.set({\r\n\t\t\t\t\tid,\r\n\t\t\t\t\tname,\r\n\t\t\t\t\timageUrl,\r\n\t\t\t\t\tprice,\r\n\t\t\t\t\tcreatedAt,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"error creating collection\", error.message);\r\n\t\t}\r\n\t} else {\r\n\t\ttry {\r\n\t\t\tqueryRef.docs.map((item) => {\r\n\t\t\t\tif (!queryRef.empty) {\r\n\t\t\t\t\tconst itemRef = firestore.doc(`/${title}/${id}`);\r\n\t\t\t\t\tconst itemSnapShot = itemRef.get();\r\n\t\t\t\t\tif (!itemSnapShot) {\r\n\t\t\t\t\t\tconst { id, name, imageUrl, price } = item;\r\n\t\t\t\t\t\tconst createdAt = new Date();\r\n\t\t\t\t\t\titem.set({\r\n\t\t\t\t\t\t\tid,\r\n\t\t\t\t\t\t\tname,\r\n\t\t\t\t\t\t\timageUrl,\r\n\t\t\t\t\t\t\tprice,\r\n\t\t\t\t\t\t\tcreatedAt,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"error creating item\", error.message);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: \"select_account\" });\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}