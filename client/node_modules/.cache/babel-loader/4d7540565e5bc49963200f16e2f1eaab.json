{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shopTypes\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase\";\nimport { fetchColletionsSuccess, fetchCollectionsFailure } from \"../../actions/shopActions\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"fui chamado !!\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchColletionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n  /*\r\n  collectionRef\r\n  \t.get()\r\n  \t.then((snapshot) => {\r\n  \t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n  \t\tdispatch(fetchColletionsSuccess(collectionsMap));\r\n  \t})\r\n  \t.catch((error) => dispatch(fetchCollectionsFailure(error.message)));\r\n  \t*/\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Mock-Shop/src/redux/shop/shopSagas.js"],"names":["call","put","takeEvery","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchColletionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,yBAHP;AAKA,SACCC,sBADD,EAECC,uBAFD,QAGO,2BAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;;AACA,MAAI;AACH,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAChCK,+BADgC,EAEhCQ,QAFgC,CAAjC;AAIA,UAAMZ,GAAG,CAACK,sBAAsB,CAACS,cAAD,CAAvB,CAAT;AACA,GARD,CAQE,OAAOC,KAAP,EAAc;AACf,UAAMf,GAAG,CAACM,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACA;AAED;;;;;;;;;;AASA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMhB,SAAS,CACdC,eAAe,CAACgB,uBADF,EAEdX,qBAFc,CAAf;AAIA","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\n\r\nimport ShopActionTypes from \"./shopTypes\";\r\n\r\nimport {\r\n\tfirestore,\r\n\tconvertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase\";\r\n\r\nimport {\r\n\tfetchColletionsSuccess,\r\n\tfetchCollectionsFailure,\r\n} from \"../../actions/shopActions\";\r\n\r\nexport function* fetchCollectionsAsync() {\r\n\tyield console.log(\"fui chamado !!\");\r\n\ttry {\r\n\t\tconst collectionRef = firestore.collection(\"collections\");\r\n\t\tconst snapshot = yield collectionRef.get();\r\n\t\tconst collectionsMap = yield call(\r\n\t\t\tconvertCollectionsSnapshotToMap,\r\n\t\t\tsnapshot\r\n\t\t);\r\n\t\tyield put(fetchColletionsSuccess(collectionsMap));\r\n\t} catch (error) {\r\n\t\tyield put(fetchCollectionsFailure(error.message));\r\n\t}\r\n\r\n\t/*\r\n\tcollectionRef\r\n\t\t.get()\r\n\t\t.then((snapshot) => {\r\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t\tdispatch(fetchColletionsSuccess(collectionsMap));\r\n\t\t})\r\n\t\t.catch((error) => dispatch(fetchCollectionsFailure(error.message)));\r\n\t\t*/\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n\tyield takeEvery(\r\n\t\tShopActionTypes.FETCH_COLLECTIONS_START,\r\n\t\tfetchCollectionsAsync\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}