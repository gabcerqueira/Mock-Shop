{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDaz0ucWUdNo7RRcOY8EkOd6OFjnHsS1kg\",\n  authDomain: \"mock-shop-db.firebaseapp.com\",\n  databaseURL: \"https://mock-shop-db.firebaseio.com\",\n  projectId: \"mock-shop-db\",\n  storageBucket: \"mock-shop-db.appspot.com\",\n  messagingSenderId: \"554682725185\",\n  appId: \"1:554682725185:web:d0acd968bea1d3626fa7c0\",\n  measurementId: \"G-GRZH2MLSQK\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`/users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {}); //exemplo de chamada\n\n  /*\r\n  \taddCollectionAndDocuments(\r\n  \t\t\"collections\",\r\n  \t\tcollectionsArray.map(({ title, items }) => ({ title, items }))\r\n  \t);\r\n  \t*/\n};\nexport const getSingleObject = (collections, itemId) => {\n  const collectionsItems = collections.map(collection => collection.items);\n  const item = collectionsItems.map(items => items.find(element => element.id == itemId));\n  const product = item.filter(item => item !== undefined);\n  return product.reduce((acc, item) => item, {});\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/gabri/Desktop/Mock-Shop/src/firebase/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","getSingleObject","itemId","collectionsItems","item","find","element","product","filter","undefined","acc","auth","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: \"AIzaSyDaz0ucWUdNo7RRcOY8EkOd6OFjnHsS1kg\",\r\n\tauthDomain: \"mock-shop-db.firebaseapp.com\",\r\n\tdatabaseURL: \"https://mock-shop-db.firebaseio.com\",\r\n\tprojectId: \"mock-shop-db\",\r\n\tstorageBucket: \"mock-shop-db.appspot.com\",\r\n\tmessagingSenderId: \"554682725185\",\r\n\tappId: \"1:554682725185:web:d0acd968bea1d3626fa7c0\",\r\n\tmeasurementId: \"G-GRZH2MLSQK\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n\tif (!userAuth) return;\r\n\tconst userRef = firestore.doc(`/users/${userAuth.uid}`);\r\n\r\n\tconst snapshot = await userRef.get();\r\n\r\n\tif (!snapshot.exists) {\r\n\t\tconst { displayName, email } = userAuth;\r\n\t\tconst createdAt = new Date();\r\n\r\n\t\ttry {\r\n\t\t\tawait userRef.set({\r\n\t\t\t\tdisplayName,\r\n\t\t\t\temail,\r\n\t\t\t\tcreatedAt,\r\n\t\t\t\t...additionalData,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"error creating user\", error.message);\r\n\t\t}\r\n\t}\r\n\r\n\treturn userRef;\r\n};\r\n\r\nexport const addCollectionAndDocuments = async (\r\n\tcollectionKey,\r\n\tobjectsToAdd\r\n) => {\r\n\tconst collectionRef = firestore.collection(collectionKey);\r\n\tconst batch = firestore.batch();\r\n\tobjectsToAdd.forEach((obj) => {\r\n\t\tconst newDocRef = collectionRef.doc();\r\n\t\tbatch.set(newDocRef, obj);\r\n\t});\r\n\tawait batch.commit();\r\n};\r\n\r\nexport const convertCollectionsSnapshotToMap = (collections) => {\r\n\tconst transformedCollection = collections.docs.map((doc) => {\r\n\t\tconst { title, items } = doc.data();\r\n\r\n\t\treturn {\r\n\t\t\trouteName: encodeURI(title.toLowerCase()),\r\n\t\t\tid: doc.id,\r\n\t\t\ttitle,\r\n\t\t\titems,\r\n\t\t};\r\n\t});\r\n\r\n\treturn transformedCollection.reduce((accumulator, collection) => {\r\n\t\taccumulator[collection.title.toLowerCase()] = collection;\r\n\t\treturn accumulator;\r\n\t}, {});\r\n\t//exemplo de chamada\r\n\t/*\r\n\t\taddCollectionAndDocuments(\r\n\t\t\t\"collections\",\r\n\t\t\tcollectionsArray.map(({ title, items }) => ({ title, items }))\r\n\t\t);\r\n\t\t*/\r\n};\r\n\r\nexport const getSingleObject = (collections, itemId) => {\r\n\tconst collectionsItems = collections.map((collection) => collection.items);\r\n\tconst item = collectionsItems.map((items) =>\r\n\t\titems.find((element) => element.id == itemId)\r\n\t);\r\n\tconst product = item.filter((item) => item !== undefined);\r\n\r\n\treturn product.reduce((acc, item) => item, {});\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({ prompt: \"select_account\" });\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}